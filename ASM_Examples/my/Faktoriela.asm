FAKTO	START 0

	JSUB STACKINIT
		
MAINLO	TD INPUT
	JEQ MAINLO
.berem iz inputa
	RD INPUT
.iz ascii
	SUB #48
	COMP #0
	JEQ HALT
	JSUB FKTORA
	JSUB ECHONUM
	JSUB ECHONL	
	J MAINLO	
	
HALT	J HALT

NEWLN	WORD X'00000a'
INPUT	BYTE X'FA'
OUTPUT	BYTE 1

.Faktoriela funkcija
FKTORA	STL @STACKPTR
	JSUB STACKPUSH
	
	COMP #2
	JLT BAILOUT

	STA @STACKPTR
	JSUB STACKPUSH

	SUB #1	
	JSUB FKTORA
	STA TEMP	
	
	JSUB STACKPOP
	LDA @STACKPTR
	
	MUL TEMP
		
BAILOUT	JSUB STACKPOP
	LDL @STACKPTR
	RSUB
	


.Stack funkcije
STACKINIT	STA TEMP
	LDA #STACK
	STA STACKPTR
	LDA TEMP
	RSUB

STACKPUSH	STA TEMP
	LDA STACKPTR
	ADD #3
	STA STACKPTR
	LDA TEMP
	RSUB	

STACKPOP	STA TEMP
	LDA STACKPTR
	SUB #3
	STA STACKPTR
	LDA TEMP
	RSUB

.SKLAD
STACK	RESW 1000
STACKPTR	RESW 1
.OSTALO
TEMP	RESW 1

.Funkcija za desetiski izpis
ECHONUM	STA NUM
.Shranim registe, ki jih uporabljam
	STA REGSTA
	STS REGSTS
	STT REGSTT
	STX REGSTX
	LDS #0
	LDX #0

LOO	LDT NUM
	LDA NUM
	COMPR T,S
	JEQ IZPIS
	DIV #10
	MUL #10
.mod 10
	SUBR A,T
	DIV #10
	STA NUM
	LDA #0
	ADDR T,A
	STCH BUFFER,X
	TIX #0
	J LOO
	
.prva je 0
IZPIS	LDT #1
	SUBR T,X

IZLOOP	SUBR T,X
	TIX #0
	JLT EXIT
	LDCH BUFFER,X
.ascii
	ADD #48
	WD OUTPUT
	SUB #48	
	SUBR T,X
	J IZLOOP
.restore registov
EXIT	LDA REGSTA
	LDS REGSTS
	LDT REGSTT
	LDX REGSTX	
	
	RSUB		


NUM	RESW 1
BUFFER 	RESW 100
REGSTS	RESW 1
REGSTT	RESW 1
REGSTX	RESW 1
REGSTA	RESW 1


ECHONL	STA REGSTA
RDYLOOP	TD OUTPUT
        JEQ RDYLOOP
	LDA NEWLN
	WD OUTPUT
	LDA REGSTA
	RSUB


	END FAKTO
	
	
